-- include cylibs
require('utils').load()
require('pattern').load()
require('melody').load()
require('ugen')
C=require('clodule')

-- set EDO
edo=22
-- find an approximate minor triad in that EDO
chord=ChordBuilder(edo):Chord(0,{'u','m3','5'},1)

-- a place for synth voices
voices={}
function Voice(t)
  local osc=C.Osc{freq=t.freq or 440}
  local env=C.Env{}
  return function(t)
    if type(t)=='table' then
      if t.freq then osc{freq=t.freq} end
    else
      if env{}.done then return nil end
      return osc()*env()
    end
  end
end

-- create synth voices for chord notes
for i,v in ipairs(chord) do
  voices[#voices+1]=Voice{freq=Pitch2Freq(v,440,edo)}
end

-- generate audio
function __process()
  local out=0
  local newVoices={}
  for i,v in ipairs(voices) do
    local val=v()
    out=out+(val or 0)
    if val~=nil then newVoices[#newVoices+1]=v end
    voices=newVoices
  end
  out=out*0.1
  return out,out
end
